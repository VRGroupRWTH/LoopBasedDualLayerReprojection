#ifndef SHADER_SHARED_DEFINES
#define SHADER_SHARED_DEFINES

#define LOOP_GENERATOR_BASE_CELL_SIZE 8
#define LOOP_GENERATOR_INVALID_OBJECT_ID 0xFFFFFFFF
#define LOOP_GENERATOR_INVALID_SEGMENT_OFFSET 0xFFFFFFFF

#define LOOP_GENERATOR_MAX_LOOP_COUNT         20000  //Increase value if not enough
#define LOOP_GENERATOR_MAX_LOOP_SEGMENT_COUNT 200000 //Increase value if not enough

#define LOOP_GENERATOR_VECTOR_CUT    0x10
#define LOOP_GENERATOR_VECTOR_EDGE   0x20
#define LOOP_GENERATOR_VECTOR_BRIDGE 0x40

#define LOOP_GENERATOR_DELTA_DEPTH     0x01
#define LOOP_GENERATOR_DELTA_NORMAL    0x02
#define LOOP_GENERATOR_DELTA_OBJECT_ID 0x04

#define LOOP_GENERATOR_LOOP_CUT              0x01
#define LOOP_GENERATOR_LOOP_EGDE             0x02
#define LOOP_GENERATOR_LOOP_RANGE_PROCESSED  0x10

#define LOOP_GENERATOR_VECTOR_WORK_GROUP_SIZE_X 32
#define LOOP_GENERATOR_VECTOR_WORK_GROUP_SIZE_Y 24
#define LOOP_GENERATOR_SPLIT_WORK_GROUP_SIZE_X 32
#define LOOP_GENERATOR_SPLIT_WORK_GROUP_SIZE_Y 24
#define LOOP_GENERATOR_BASE_WORK_GROUP_SIZE_X 12
#define LOOP_GENERATOR_BASE_WORK_GROUP_SIZE_Y 8
#define LOOP_GENERATOR_DISCARD_WORK_GROUP_SIZE_X 12
#define LOOP_GENERATOR_DISCARD_WORK_GROUP_SIZE_Y 8
#define LOOP_GENERATOR_WRITE_WORK_GROUP_SIZE_X 12
#define LOOP_GENERATOR_WRITE_WORK_GROUP_SIZE_Y 8

#define LINE_GENERATOR_EDGE_WORK_GROUP_SIZE_X 32
#define LINE_GENERATOR_EDGE_WORK_GROUP_SIZE_Y 24
#define LINE_GENERATOR_QUAD_TREE_WORK_GROUP_SIZE_X 32
#define LINE_GENERATOR_QUAD_TREE_WORK_GROUP_SIZE_Y 24

#define QUAD_GENERATOR_MAX_QUAD_COUNT   2000000 //Increase value if not enough
#define QUAD_GENERATOR_MAX_VERTEX_COUNT 2000000 //Increase value if not enough
#define QUAD_GENERATOR_MAX_INDEX_COUNT  8000000 //Increase value if not enough

#define QUAD_GENERATOR_CORNER_ALLOCATE_FLAG 0xFFFFFFFF

#define QUAD_GENERATOR_COPY_WORK_GROUP_SIZE_X 32
#define QUAD_GENERATOR_COPY_WORK_GROUP_SIZE_Y 24
#define QUAD_GENERATOR_DELTA_WORK_GROUP_SIZE_X 32
#define QUAD_GENERATOR_DELTA_WORK_GROUP_SIZE_Y 24
#define QUAD_GENERATOR_REFINE_WORK_GROUP_SIZE_X 768
#define QUAD_GENERATOR_CORNER_WORK_GROUP_SIZE_X 32
#define QUAD_GENERATOR_CORNER_WORK_GROUP_SIZE_Y 24
#define QUAD_GENERATOR_WRITE_WORK_GROUP_SIZE_X 768

#define SCENE_MATERIAL_BASE_COLOR_TEXTURE_BINDING_POINT        32
#define SCENE_MATERIAL_MATERIAL_TEXTURE_BINDING_POINT          33
#define SCENE_MATERIAL_NORMAL_TEXTURE_BINDING_POINT            34
#define SCENE_MATERIAL_EMISSIVE_TEXTURE_BINDING_POINT          35
#define SCENE_LIGHT_DEPTH_ARRAY_BUFFER_BINDING_POINT           36
#define SCENE_LIGHT_DEPTH_CUBE_ARRAY_BUFFER_BINDING_POINT      37
#define SCENE_INDIRECT_RED_DISTRIBUTION_BUFFER_BINDING_POINT   38
#define SCENE_INDIRECT_GREEN_DISTRIBUTION_BUFFER_BINDING_POINT 39
#define SCENE_INDIRECT_BLUE_DISTRIBUTION_BUFFER_BINDING_POINT  40
#define SCENE_INDIRECT_OPACITY_BUFFER_BINDING_POINT            41
#define SCENE_VOLUME_RED_DISTRIBUTION_BUFFER_BINDING_POINT     42
#define SCENE_VOLUME_GREEN_DISTRIBUTION_BUFFER_BINDING_POINT   43
#define SCENE_VOLUME_BLUE_DISTRIBUTION_BUFFER_BINDING_POINT    44

#define SCENE_LIGHT_BUFFER_BINDING_POINT 0

#define SCENE_INDIRECT_PROPAGATE_WORK_GROUP_SIZE_X 8
#define SCENE_INDIRECT_PROPAGATE_WORK_GROUP_SIZE_Y 8
#define SCENE_INDIRECT_PROPAGATE_WORK_GROUP_SIZE_Z 8

#define SCENE_INDIRECT_OPACITY_WORK_GROUP_SIZE_X 8
#define SCENE_INDIRECT_OPACITY_WORK_GROUP_SIZE_Y 8
#define SCENE_INDIRECT_OPACITY_WORK_GROUP_SIZE_Z 8

#define SCENE_VOLUME_IRRADIANCE_WORK_GROUP_SIZE_X 16
#define SCENE_VOLUME_IRRADIANCE_WORK_GROUP_SIZE_Y 16
#define SCENE_VOLUME_IRRADIANCE_WORK_GROUP_SIZE_Z 1

#define SCENE_VOLUME_INTEGRATE_WORK_GROUP_SIZE_X 1
#define SCENE_VOLUME_INTEGRATE_WORK_GROUP_SIZE_Y 1
#define SCENE_VOLUME_INTEGRATE_WORK_GROUP_SIZE_Z 1

#define SCENE_LIGHT_BUFFER_RESOLUTION 2048

#define SCENE_LIGHT_TYPE_DIRECTIONAL 0
#define SCENE_LIGHT_TYPE_SPOT        1
#define SCENE_LIGHT_TYPE_POINT       2

struct Light
{
    vec3 position;
    uint type;

    vec3 direction;
    float inner_angle;

    vec3 color;
    float outer_angle;

    uvec3 padding;
    uint light_layer_index;

    mat4 light_projection_matrix;
    mat4 light_matrix;
};

struct LoopCount
{
    uint loop_counter;
    uint segment_counter;
};

struct Loop
{
    uint segment_count;
    uint segment_offset;
    uint loop_length;
    uint loop_flag;
};

struct LoopRange
{
    u16vec2 previous_coord; //Lies outside the cell
    u16vec2 start_coord;    //Lies inside the cell
    u16vec2 end_coord;      //Lies outside the cell
    uint flag;

    uint segment_count;
    uint segment_offset;
    uint segment_length;
};

struct LoopSegment
{
    u16vec2 end_coord;
    float end_coord_depth;
};

struct QuadCount
{
    uint vertex_count;
    uint index_count;
};

struct Quad
{
    u16vec2 coord;
    uint level;
};

struct QuadVertex
{
    u16vec2 coord;
    float depth;
};

struct QuadIndirect
{
    uint group_count_x;
    uint group_count_y;
    uint group_count_z;
    uint quad_count;
};

#endif